package cn.edu.jxnu.reflect;

import cn.edu.jxnu.reflect.RT.BinaryOpCallSite;
import cn.edu.jxnu.reflect.RT.BinaryOps;
import cn.edu.jxnu.reflect.RT.UnayOps;
import cn.edu.jxnu.reflect.RT;
import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;

import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles.Lookup;
import java.lang.invoke.MethodType;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;



public class RTTest {

  @Rule
  public final Timeout globalTimeout = new Timeout(10000);

  @Rule
  public final ExpectedException thrown = ExpectedException.none();

  // Test written by Diffblue Cover
  @Test
  public void constructorInputNotNullNullOutputNullPointerException9991ccc354363115faf() {

    // Arrange
    final String arg0 = "aaaaa";
    final MethodType arg1 = null;

    // Act, creating object to test constructor
    thrown.expect(NullPointerException.class);
    new BinaryOpCallSite(arg0, arg1);

    // The method is not expected to return due to exception thrown

  }

  // Test written by Diffblue Cover
  @Test
  public void test1InputNullNotNullNotNullOutputFalse999899e838fb073f7c4() {

    // Arrange
    final Class<Object> arg0 = null;
    final Object arg1 = "aaaaa";
    final Object arg2 = "aaaaa";

    // Act
    final boolean actual = BinaryOpCallSite.test1(arg0, arg1, arg2);

    // Assert result
    Assert.assertFalse(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void test2InputNullNotNullNotNullOutputFalse999c016b77cade957ed() {

    // Arrange
    final Class<Object> arg0 = null;
    final Object arg1 = "aaaaa";
    final Object arg2 = "aaaaa";

    // Act
    final boolean actual = BinaryOpCallSite.test2(arg0, arg1, arg2);

    // Assert result
    Assert.assertFalse(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void addInputNotNullNotNullOutputNotNull999d5278ef61175cbdb() {

    // Arrange
    final String arg0 = "aaaaa";
    final String arg1 = "aaaaa";

    // Act
    final Object actual = BinaryOps.add(arg0, arg1);

    // Assert result
    Assert.assertEquals("aaaaaaaaaa", actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void addInputPositivePositiveOutputNotNull999effdd99bc817a97f() {

    // Arrange
    final double arg0 = 1.0;
    final double arg1 = 1.0;

    // Act
    final Object actual = BinaryOps.add(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void addInputPositivePositiveOutputNotNull9998db2ac3a06e4052f() {

    // Arrange
    final int arg0 = 1;
    final int arg1 = 1;

    // Act
    final Object actual = BinaryOps.add(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void constructorOutputNotNull999c0b16d296e29be9c() {

    // Act, creating object to test constructor
    final BinaryOps actual = new BinaryOps();

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void gtInputNotNullNotNullOutputNotNull999fd242ea08a4b31c3() {

    // Arrange
    final String arg0 = "aaaaa";
    final String arg1 = "aaaaa";

    // Act
    final Object actual = BinaryOps.gt(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void gtInputPositivePositiveOutputNotNull999ab465abf78ef040e() {

    // Arrange
    final double arg0 = 1.0;
    final double arg1 = 1.0;

    // Act
    final Object actual = BinaryOps.gt(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void gtInputPositivePositiveOutputNotNull999675b61b3ce61baf3() {

    // Arrange
    final int arg0 = 1;
    final int arg1 = 1;

    // Act
    final Object actual = BinaryOps.gt(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void mulInputPositivePositiveOutputNotNull999d2f96a3bfb5df8b5() {

    // Arrange
    final double arg0 = 1.0;
    final double arg1 = 1.0;

    // Act
    final Object actual = BinaryOps.mul(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void mulInputPositivePositiveOutputNotNull9995730b2e2da3aed16() {

    // Arrange
    final int arg0 = 1;
    final int arg1 = 1;

    // Act
    final Object actual = BinaryOps.mul(arg0, arg1);

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void binaryInputNullNotNullNullOutputNullPointerException99969ba119c0d8ea8c6() {

    // Arrange
    final Lookup arg0 = null;
    final String arg1 = ")";
    final MethodType arg2 = null;

    // Act
    thrown.expect(NullPointerException.class);
    RT.binary(arg0, arg1, arg2);

    // The method is not expected to return due to exception thrown

  }

  // Test written by Diffblue Cover
  @Test
  public void constructorOutputNotNull99993fd290c6cfe58ff() {

    // Act, creating object to test constructor
    final RT actual = new RT();

    // Assert result
    Assert.assertNotNull(actual);

  }

//failed_compile   // Test written by Diffblue Cover
//  @Test
//  public void cstInputNullNotNullNullNotNullOutputNotNull999b28212467bf64617() throws InvocationTargetException, NoSuchMethodException, IllegalAccessException {
//
//    // Arrange
//    final Lookup arg0 = null;
//    final String arg1 = ")";
//    final MethodType arg2 = null;
//    final Object arg3 = ")";
//
//    // Act
//    final CallSite actual = RT.cst(arg0, arg1, arg2, arg3);
//
//    // Assert result
//    Assert.assertNotNull(actual);
//    Assert.assertNotNull(Reflector.getInstanceField(actual, "target"));
//    Assert.assertEquals(")", Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"));
//    Assert.assertEquals(1, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "result"));
//    Assert.assertEquals(1, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "forceInline"));
//    Assert.assertEquals("identity_L", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0]);
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "arguments"));
//    final Class<?> basicTypeType = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf = basicTypeType.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance = (Enum) basicTypeValueOf.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"));
//    Assert.assertEquals(28, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "fieldOffset"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "fieldType"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("getObjectField", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], "arguments"));
//    final Class<?> basicTypeType1 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf1 = basicTypeType1.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance1 = (Enum) basicTypeValueOf1.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance1, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], "arguments"));
//    final Class<?> basicTypeType2 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf2 = basicTypeType2.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance2 = (Enum) basicTypeValueOf2.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance2, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_L_J", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_L_L", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType3 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf3 = basicTypeType3.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance3 = (Enum) basicTypeValueOf3.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance3, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType4 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf4 = basicTypeType4.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance4 = (Enum) basicTypeValueOf4.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance4, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType5 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf5 = basicTypeType5.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance5 = (Enum) basicTypeValueOf5.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance5, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType6 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf6 = basicTypeType6.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance6 = (Enum) basicTypeValueOf6.invoke(null, "J_TYPE");
//    Assert.assertEquals(basicTypeInstance6, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType7 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf7 = basicTypeType7.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance7 = (Enum) basicTypeValueOf7.invoke(null, "J_TYPE");
//    Assert.assertEquals(basicTypeInstance7, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType8 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf8 = basicTypeType8.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance8 = (Enum) basicTypeValueOf8.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance8, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType9 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf9 = basicTypeType9.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance9 = (Enum) basicTypeValueOf9.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance9, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "arguments"))[0]);
//    final Class<?> basicTypeType10 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf10 = basicTypeType10.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance10 = (Enum) basicTypeValueOf10.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance10, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "vmentry"), "clazz"));
//
//  }

  // Test written by Diffblue Cover
  @Test
  public void lookupBinaryOpInputNotNullNullNullOutputNullPointerException999fe2f222e8fdb0af5() {

    // Arrange
    final String arg0 = ")";
    final Class<Object> arg1 = null;
    final Class<Object> arg2 = null;

    // Act
    thrown.expect(NullPointerException.class);
    RT.lookupBinaryOp(arg0, arg1, arg2);

    // The method is not expected to return due to exception thrown

  }

//failed_compile   // Test written by Diffblue Cover
//  @Test
//  public void unaryInputNullNotNullNullOutputNotNull999fd8a2a7e4499d9f6() throws InvocationTargetException, NoSuchMethodException, IllegalAccessException {
//
//    // Arrange
//    final Lookup arg0 = null;
//    final String arg1 = ")";
//    final MethodType arg2 = null;
//
//    // Act
//    final CallSite actual = RT.unary(arg0, arg1, arg2);
//
//    // Assert result
//    Assert.assertNotNull(actual);
//    Assert.assertNotNull(Reflector.getInstanceField(actual, "target"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "member"), "clazz"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_I_L", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], "arguments"));
//    final Class<?> basicTypeType = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf = basicTypeType.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance = (Enum) basicTypeValueOf.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1], "arguments"));
//    final Class<?> basicTypeType1 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf1 = basicTypeType1.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance1 = (Enum) basicTypeValueOf1.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance1, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_L_L", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], "arguments"));
//    final Class<?> basicTypeType2 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf2 = basicTypeType2.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance2 = (Enum) basicTypeValueOf2.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance2, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType3 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf3 = basicTypeType3.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance3 = (Enum) basicTypeValueOf3.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance3, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType4 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf4 = basicTypeType4.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance4 = (Enum) basicTypeValueOf4.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance4, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType5 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf5 = basicTypeType5.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance5 = (Enum) basicTypeValueOf5.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance5, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType6 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf6 = basicTypeType6.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance6 = (Enum) basicTypeValueOf6.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance6, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[3], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"));
//    Assert.assertEquals(1, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argI1"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "member"), "clazz"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "result"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_LI_I", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], "arguments"));
//    final Class<?> basicTypeType7 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf7 = basicTypeType7.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance7 = (Enum) basicTypeValueOf7.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance7, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType8 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf8 = basicTypeType8.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance8 = (Enum) basicTypeValueOf8.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance8, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType9 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf9 = basicTypeType9.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance9 = (Enum) basicTypeValueOf9.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance9, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "vmentry"), "clazz"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "forceInline"));
//    Assert.assertEquals("BMH.reinvoke", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0]);
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], "arguments"));
//    final Class<?> basicTypeType10 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf10 = basicTypeType10.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance10 = (Enum) basicTypeValueOf10.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance10, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], "type"));
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(28, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "fieldOffset"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "fieldType"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("getIntField", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeStatic_L_J", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType11 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf11 = basicTypeType11.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance11 = (Enum) basicTypeValueOf11.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance11, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType12 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf12 = basicTypeType12.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance12 = (Enum) basicTypeValueOf12.invoke(null, "J_TYPE");
//    Assert.assertEquals(basicTypeInstance12, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType13 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf13 = basicTypeType13.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance13 = (Enum) basicTypeValueOf13.invoke(null, "J_TYPE");
//    Assert.assertEquals(basicTypeInstance13, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType14 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf14 = basicTypeType14.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance14 = (Enum) basicTypeValueOf14.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance14, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType15 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf15 = basicTypeType15.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance15 = (Enum) basicTypeValueOf15.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance15, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType16 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf16 = basicTypeType16.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance16 = (Enum) basicTypeValueOf16.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance16, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertEquals(32, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "fieldOffset"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "fieldType"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("getObjectField", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType17 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf17 = basicTypeType17.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance17 = (Enum) basicTypeValueOf17.invoke(null, "J_TYPE");
//    Assert.assertEquals(basicTypeInstance17, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[3], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType18 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf18 = basicTypeType18.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance18 = (Enum) basicTypeValueOf18.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance18, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType19 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf19 = basicTypeType19.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance19 = (Enum) basicTypeValueOf19.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance19, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType20 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf20 = basicTypeType20.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance20 = (Enum) basicTypeValueOf20.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance20, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(5, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeSpecial_LLI_I", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(6, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], "arguments"));
//    final Class<?> basicTypeType21 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf21 = basicTypeType21.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance21 = (Enum) basicTypeValueOf21.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance21, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    final Class<?> basicTypeType22 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf22 = basicTypeType22.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance22 = (Enum) basicTypeValueOf22.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance22, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    final Class<?> basicTypeType23 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf23 = basicTypeType23.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance23 = (Enum) basicTypeValueOf23.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance23, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments"));
//    Assert.assertEquals(4, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments"))[2]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[4], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "arguments"))[3]);
//    final Class<?> basicTypeType24 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf24 = basicTypeType24.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance24 = (Enum) basicTypeValueOf24.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance24, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[5], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType25 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf25 = basicTypeType25.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance25 = (Enum) basicTypeValueOf25.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance25, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "vmentry"), "clazz"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"));
//    Assert.assertEquals(5, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "result"));
//    Assert.assertEquals(2, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "forceInline"));
//    Assert.assertEquals("BMH.reinvoke", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"));
//    Assert.assertEquals(6, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names")).length);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0]);
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "constraint"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "function"));
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "arguments"));
//    final Class<?> basicTypeType26 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf26 = basicTypeType26.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance26 = (Enum) basicTypeValueOf26.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance26, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], "type"));
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[1]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"));
//    Assert.assertEquals(32, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "fieldOffset"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "fieldType"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "arguments"))[0]);
//    final Class<?> basicTypeType27 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf27 = basicTypeType27.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance27 = (Enum) basicTypeValueOf27.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance27, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeSpecial_LL_I", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType28 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf28 = basicTypeType28.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance28 = (Enum) basicTypeValueOf28.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance28, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType29 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf29 = basicTypeType29.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance29 = (Enum) basicTypeValueOf29.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance29, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "arguments"))[1]);
//    final Class<?> basicTypeType30 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf30 = basicTypeType30.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance30 = (Enum) basicTypeValueOf30.invoke(null, "I_TYPE");
//    Assert.assertEquals(basicTypeInstance30, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertEquals(28, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "fieldOffset"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "fieldType"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "form"), "names"))[3], "function"), "resolvedHandle"), "form"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "function"), "resolvedHandle"), "form"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "arguments"))[0]);
//    final Class<?> basicTypeType31 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf31 = basicTypeType31.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance31 = (Enum) basicTypeValueOf31.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance31, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "invoker"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"));
//    Assert.assertEquals(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "member"), Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "member"));
//    Assert.assertEquals((short) 0, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "customizationCount"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "asTypeCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"));
//    Assert.assertEquals(4, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "result"));
//    Assert.assertEquals(3, Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "arity"));
//    Assert.assertTrue((boolean) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "forceInline"));
//    Assert.assertEquals("DMH.invokeSpecial_LI_L", Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "debugName"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"));
//    Assert.assertEquals(5, ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[2]);
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "constraint"));
//    Assert.assertEquals(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"));
//    Assert.assertEquals(1, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[0], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "arguments"))[0]);
//    final Class<?> basicTypeType32 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf32 = basicTypeType32.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance32 = (Enum) basicTypeValueOf32.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance32, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], "type"));
//    Assert.assertNotNull(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4]);
//    Assert.assertNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "constraint"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "function"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "member"), "clazz"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "invoker"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "function"), "resolvedHandle"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"));
//    Assert.assertEquals(3, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL0"), "form"), "names"))[2], "function"), "resolvedHandle"), "form"), "names"))[1], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "argL1"), "argL0"), "form"), "names"))[2], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[1]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "arguments"))[2]);
//    final Class<?> basicTypeType33 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf33 = basicTypeType33.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance33 = (Enum) basicTypeValueOf33.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance33, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "names"))[4], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "function"), "resolvedHandle"), "form"), "vmentry"), "clazz"));
//    Assert.assertNotNull(Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "arguments"));
//    Assert.assertEquals(2, ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "arguments")).length);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[4], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "arguments"))[0]);
//    Assert.assertEquals(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[3], ((Object[]) Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "arguments"))[1]);
//    final Class<?> basicTypeType34 = Reflector.forName("java.lang.invoke.LambdaForm$BasicType");
//    final Method basicTypeValueOf34 = basicTypeType34.getDeclaredMethod("valueOf", String.class);
//    final Enum basicTypeInstance34 = (Enum) basicTypeValueOf34.invoke(null, "L_TYPE");
//    Assert.assertEquals(basicTypeInstance34, Reflector.getInstanceField(((Object[]) Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "names"))[5], "type"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "customized"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "transformCache"));
//    Assert.assertNotNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "vmentry"));
//    Assert.assertNull(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(Reflector.getInstanceField(actual, "target"), "form"), "vmentry"), "clazz"));
//
//  }

  // Test written by Diffblue Cover
  @Test
  public void constructorOutputNotNull999ad56b861e28ffdb1() {

    // Act, creating object to test constructor
    final RT.UnayOps actual = new RT.UnayOps();

    // Assert result
    Assert.assertNotNull(actual);

  }

  // Test written by Diffblue Cover
  @Test
  public void notInputTrueOutputNotNull9995bd5ea1d58a107ae() {

    // Arrange
    final boolean arg0 = true;

    // Act
    final Object actual = RT.UnayOps.not(arg0);

    // Assert result
    Assert.assertNotNull(actual);

  }
}
